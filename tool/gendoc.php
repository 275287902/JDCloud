<?php
/*
jdcloud-gendoc

php gendoc.php mysrc.js -> doc.html
*/

require("lib/Parsedown.php");

// ====== global
$keys = []; # elem:{type, key}
$newBlock = false;
$blocks = [];

// ====== function
// REFER TO: https://github.com/erusev/parsedown/wiki/Tutorial:-Create-Extensions
class MyParsedown extends Parsedown
{
	function __construct() {
		$this->BlockTypes['@'][] = 'FormatText';
		//$this->inlineMarkerList .= '@';
		$this->breaksEnabled = true;
	}

	protected function blockFormatText($Line)
	{
		$text = $Line['text'];
		if (! preg_match('/@(\w+)\s+([^(){} ]+)(.*)/', $text, $ms) )
			return;

		global $newBlock, $keys;
		$class = $ms[1];
		$key = $ms[2];
		$other = $ms[3] ?: "";

		if ($newBlock) {
			$newBlock = false;
			$keys[] = $key;
			$markup = "<h2 id=\"{$key}\">" . $ms[0] . "</h2>"; // remove '@'
		}
		else {
			if ($class == "see") {
				$key = "<a href=\"#{$key}\">{$key}</a>";
			}
			else if ($class == "alias") {
				$keys[] = $key;
				$key = "<a id=\"{$key}\">{$key}</a>";
			}
			$markup = "<p class=\"{$class}\"><strong>@{$class} {$key}</strong> {$other}</p>";
		}
		$Block = [
			"markup" => $markup
		];
		return $Block;
	}

	/*
    protected function blockHeader($Line)
	{
		$e = parent::blockHeader($Line);
		$text = $e['element']['text'];
		$e['element']['attributes'] = ['id' => $text];
		return $e;
	}
	 */
}

// ====== main

@$f = $argv[1] or die ("*** require input file\n");

$str = file_get_contents($f);
$pd = new MyParsedown();

preg_replace_callback('/
	\/\*\*+\s* (@\w+ \s+ .*?) \s*\*+\/
/xs', function ($ms) {

	global $newBlock, $pd, $blocks;
	$newBlock = true;
	$blocks[] = $pd->text($ms[1]);

}, $str);

echo <<<EOL
<html>
<meta charset="utf-8">
<link rel="stylesheet" href="style.css" />
<h2>Keywords</h2>

EOL;

sort($keys);
echo "<div>\n";
foreach ($keys as $key) {
	echo "<a href=\"#{$key}\">{$key}</a><br>\n";
}
echo "</div><hr>\n";

foreach ($blocks as $s) {
	echo $s;
	echo "<hr>\n";
}


echo "<hr><div>Generated by jdcloud-gendoc @ " . date('c') . "</div>\n";
